#! /usr/bin/env php
<?php

define('IA_SETUP_SCRIPT', true);
require_once(dirname($argv[0]) . '/utilities.php');

// Add slashes to a string.
function slash_string($string, $start, $end) {
    // Strip existing start/end slash
    $string = trim($string, '/');

    // Add start/end slash
    if ($start) {
        $string = '/' . $string;
    }
    if ($end) {
        $string = $string . '/';
    }

    // Tada.
    return $string;
}

// Checks if the script is running as root.
function running_as_root() {
    return posix_getuid() == 0;
}

// Replace config values in $srcfile and copy to $dstfile
function generate_config_file($vars, $srcfile, $dstfile) {
    $contents = file_get_contents($srcfile);
    foreach ($vars as $k => $v) {
        $contents = str_replace("--write-me-$k--", $v, $contents);
    }
    file_put_contents($dstfile, $contents);

    chown($dstfile, getmyuid());
    chgrp($dstfile, getmygid());
    chmod($dstfile, 0644);
}

// Compiles longest common substrig written in c++
function compile_lcs($IA_ROOT_DIR) {
    $IA_ROOT_DIR = escapeshellarg($IA_ROOT_DIR);
    $command = 'g++ ' . $IA_ROOT_DIR . 'common/lcs.cpp -O2 -static -o ' .
        $IA_ROOT_DIR . 'common/lcs';

    $last_line = system($command, $ret_val);

    if ($ret_val) {
        // Check for errors
        print("\nWARNING!!! There has been a problem when trying to compile " .
              "a cpp source! Check your gcc/g++ installation then rerun " .
              "the script.\nThis will not affect the setup except for " .
              "comparing revisons, but you should take a look at this!\n\n");
        return 0;
    }

    return 1;
}

// ---
// Real code starts here
// ---

print("Hello, I am the infoarena setup script and I will try to guide ".
      "you through setting up an infoarena developement working copy.\n");

if (!running_as_root()) {
    print("First of all, please run me as root.\n");
    die();
}

print("I'm going to ask you a couple of questions. Just press enter if you ".
      "like the default value. I'm pretty good at guessing ;).\n\n");

// FIXME: Check dependencies? pecl nonsense is no longer mandatory.
// It should be done it setup.sh anyway, since we can't rely on php-cli.

// Initialize config vars.
$config_vars = array();
$config_vars['IA_ROOT_DIR'] = realpath(dirname($argv[0]) . '/../') . '/';
$config_vars['IA_URL_HOST'] = 'http://localhost';
$config_vars['IA_URL_PREFIX'] = '/infoarena2-dev/';
$config_vars['IA_DB_HOST'] = 'localhost';
$config_vars['IA_DB_USER'] = 'root';
$config_vars['IA_DB_PASS'] = '';
$config_vars['IA_DB_NAME'] = 'infoarena2';

// Ask user.
$config_vars['IA_ROOT_DIR'] = read_line('SVN checkout dir?',
                                        $config_vars['IA_ROOT_DIR']);
$config_vars['IA_ROOT_DIR'] = slash_string(
    realpath($config_vars['IA_ROOT_DIR']), true, true);
$config_vars['IA_AVATAR_FOLDER'] =
    $config_vars['IA_ROOT_DIR'] . 'www/static/images/avatar/';
$config_vars['IA_AVATAR_FOLDER'] = read_line('Avatar Folder?',
                                             $config_vars['IA_AVATAR_FOLDER']);
$config_vars['IA_AVATAR_FOLDER'] = slash_string(
    $config_vars['IA_AVATAR_FOLDER'], true, true);
$config_vars['IA_URL_HOST'] = read_line('Host part of url (with http)?',
                                        $config_vars['IA_URL_HOST']);
$config_vars['IA_URL_HOST'] = slash_string($config_vars['IA_URL_HOST'],
                                           false, false);
$config_vars['IA_URL_PREFIX'] = read_line('Prefix part of url?',
                                          $config_vars['IA_URL_PREFIX']);
$config_vars['IA_URL_PREFIX'] = slash_string($config_vars['IA_URL_PREFIX'],
                                             true, true);

// Compile needed files
compile_lcs($config_vars['IA_ROOT_DIR']);

// Database configuration here.
while (true) {
    $config_vars['IA_DB_HOST'] = read_line('Database host?',
                                           $config_vars['IA_DB_HOST']);
    $config_vars['IA_DB_USER'] = read_line('Database connection username?',
                                           $config_vars['IA_DB_USER']);
    $config_vars['IA_DB_PASS'] = read_line('Database password?',
                                           $config_vars['IA_DB_PASS']);
    $config_vars['IA_DB_NAME'] = read_line('Database name?',
                                           $config_vars['IA_DB_NAME']);

    $dblink = mysql_connect($config_vars['IA_DB_HOST'],
                            $config_vars['IA_DB_USER'],
                            $config_vars['IA_DB_PASS']);

    if (!$dblink) {
        print("Can't connect to database, something must be wrong.\n");
        if (read_bool("Try again or ignore (CTRL-C to abort)?", true)) {
            continue;
        } else {
            break;
        }
    }

    if (!mysql_select_db($config_vars['IA_DB_NAME'], $dblink)) {
        print("Can't select database.\n");
        if (read_bool("Should I try to create the database?", true)) {
            if (!mysql_query("CREATE DATABASE {$config_vars['IA_DB_NAME']}")) {
                print("Failed creating database, sorry.");
                continue;
            }
            if (!mysql_select_db($config_vars['IA_DB_NAME'], $dblink)) {
                print("Still can't select database.\n");
                continue;
            }
        }
    }
    break;
}

// Do the config monkey.
$ia_root = $config_vars['IA_ROOT_DIR'];
$ia_url = $config_vars['IA_URL_HOST'] . $config_vars['IA_URL_PREFIX'];
generate_config_file($config_vars,
                     $ia_root . 'config.php.sample',
                     $ia_root . 'config.php');
generate_config_file($config_vars,
                     $ia_root . 'www/htaccess.sample',
                     $ia_root . 'www/.htaccess');
generate_config_file($config_vars,
                     $ia_root . 'eval/config.php.sample',
                     $ia_root . 'eval/config.php');
generate_config_file($config_vars,
                     $ia_root . 'apache.conf.sample',
                     $ia_root . 'apache.conf');

if ($dblink && read_bool('Should I try to import the sample database?', true)) {
    $cmd = sprintf('mysql --user=%s --password=%s --host=%s %s < %s',
                   escapeshellarg($config_vars['IA_DB_USER']),
                   escapeshellarg($config_vars['IA_DB_PASS']),
                   escapeshellarg($config_vars['IA_DB_HOST']),
                   escapeshellarg($config_vars['IA_DB_NAME']),
                   escapeshellarg($config_vars['IA_ROOT_DIR'] . 'db.sql'));
    print("Running $cmd\n");
    system($cmd);
    print("Done importing sample database\n\n");
}

// Configure apache
if (read_bool('Should I try to configure apache for you?', true)) {
    $sitename = slash_string($config_vars['IA_URL_PREFIX'], false, false);
    $sitename = read_line('Site name?', $sitename);

    $dirs = array($ia_root . 'attach',
                  $ia_root . 'cache',
                  $config_vars['IA_AVATAR_FOLDER'],
                  $ia_root . 'www/static/images/latex',
                  $ia_root . 'www/static/images/tmp',
                  $ia_root . 'smf/attachments');
    foreach ($dirs as $dir) {
        if (!is_dir($dir)) {
            mkdir($dir);
        }
        system('chmod 2750 ' . escapeshellarg($dir));
    }

    $sitename = escapeshellarg($sitename);
    if (php_uname('s') === 'Darwin') {
        // OS X installation
        print("You seem to have an OS X setup.\n");
        system("rm -rf /etc/apache2/other/$sitename.conf");
        system("ln -sf {$ia_root}apache.conf /etc/apache2/other/$sitename.conf");

        $httpd_contents = file_get_contents('/etc/apache2/httpd.conf');
        $httpd_contents = str_replace(
            '#LoadModule php5_module libexec/apache2/libphp5.so',
            'LoadModule php5_module libexec/apache2/libphp5.so',
            $httpd_contents);
        file_put_contents('/etc/apache2/httpd.conf', $httpd_contents);
        system("apachectl -k restart");
        foreach ($dirs as $dir) {
            system('chown _www:' . getmygid() . ' ' . escapeshellarg($dir));
        }
    } else if (is_dir('/etc/apache2/sites-available/') &&
               is_dir('/etc/apache2/sites-enabled/')) {
        // Debian/Ubuntu
        print("You seem to have a debian-ish apache2 setup.\n");
        system("rm -rf /etc/apache2/sites-available/$sitename");
        system("rm -rf /etc/apache2/sites-enabled/$sitename");
        system("ln -sf {$ia_root}apache.conf ".
               "/etc/apache2/sites-available/$sitename");

        // Enable site ad modules, then reload
        system("a2enmod php5");
        system("a2enmod rewrite");
        system("a2ensite $sitename");
        system("/etc/init.d/apache2 reload");
        foreach ($dirs as $dir) {
            system('chown www-data:' . getmygid() . ' ' . escapeshellarg($dir));
        }
    } else if (is_dir('/etc/httpd/conf.d/')) {
        // Fedora/Redhat/others?
        print('You seem to have a redhat-ish apache2 setup.\n');
        system("rm -rf /etc/httpd/infoarena2-dev");
        system("ln -sf {$ia_root}apache.conf /etc/httpd/conf.d/$sitename");
        system("service httpd restart");
        foreach ($dirs as $dir) {
            system('chown apache:' . getmygid() . ' ' . escapeshellarg($dir));
        }
    } else {
        print("I can not figure out how to setup the webserver on your " .
              "operating system. You will have to do it yourself\n");
        if (!read_bool("Would you like to continue with the rest of " .
                       "the setup script?", true)) {
            die();
        }
    }
    print("Done configuring apache\n\n");
}

if (php_uname('s') === 'Darwin') {
    print("Evaluator is not supported on OS X installations.\n\n");
} else {
    print("FIXME: eval won't work, but it doesn't matter.\n");
    print("Done configuring evaluator\n\n");
}

// Run any other scripts
if (read_bool("Should I try to build the avatar cache folder?", true)) {
    print("Building the avatar cache folder\n");
    system("{$ia_root}scripts/make-avatar-folder");
    print("Done building the avatar cache folder\n\n");
}

// Try and configure forum
if (read_bool("Should I try to configure the forum (ugly db stuff)?", true)) {
    system("{$ia_root}scripts/forum-fix");
    print("Done configuring the forum\n\n");
}
